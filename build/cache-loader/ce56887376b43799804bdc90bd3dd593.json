{"remainingRequest":"H:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!H:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js??ref--4-3!H:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!H:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\administration\\audits\\audits.tsx","dependencies":[{"path":"H:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\administration\\audits\\audits.tsx","mtime":1549223105114},{"path":"H:\\projects\\limsy-application\\node_modules\\react-hot-loader\\webpack.js","mtime":1549223610051},{"path":"H:\\projects\\limsy-application\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1549223563882},{"path":"H:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1549223563895},{"path":"H:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js","mtime":1549223611188},{"path":"H:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js","mtime":1549223603361}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Input, Row, Table } from 'reactstrap';\r\nimport { TextFormat, JhiPagination, getPaginationItemsNumber, getSortState } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { APP_TIMESTAMP_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\nimport { getAudits } from '../administration.reducer';\r\nvar previousMonth = function () {\r\n    var now = new Date();\r\n    var fromDate = now.getMonth() === 0\r\n        ? new Date(now.getFullYear() - 1, 11, now.getDate())\r\n        : new Date(now.getFullYear(), now.getMonth() - 1, now.getDate());\r\n    return fromDate.toISOString().slice(0, 10);\r\n};\r\nvar today = function () {\r\n    // Today + 1 day - needed if the current day must be included\r\n    var day = new Date();\r\n    day.setDate(day.getDate() + 1);\r\n    var toDate = new Date(day.getFullYear(), day.getMonth(), day.getDate());\r\n    return toDate.toISOString().slice(0, 10);\r\n};\r\nvar AuditsPage = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AuditsPage, _super);\r\n    function AuditsPage() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = tslib_1.__assign({}, getSortState(_this.props.location, ITEMS_PER_PAGE), { fromDate: previousMonth(), toDate: today() });\r\n        _this.onChangeFromDate = function (evt) {\r\n            _this.setState({\r\n                fromDate: evt.target.value\r\n            }, function () { return _this.getAudits(); });\r\n        };\r\n        _this.onChangeToDate = function (evt) {\r\n            _this.setState({\r\n                toDate: evt.target.value\r\n            }, function () { return _this.getAudits(); });\r\n        };\r\n        _this.sort = function (prop) { return function () {\r\n            _this.setState({\r\n                order: _this.state.order === 'asc' ? 'desc' : 'asc',\r\n                sort: prop\r\n            }, function () { return _this.transition(); });\r\n        }; };\r\n        _this.transition = function () {\r\n            _this.getAudits();\r\n            _this.props.history.push(_this.props.location.pathname + \"?page=\" + _this.state.activePage + \"&sort=\" + _this.state.sort + \",\" + _this.state.order);\r\n        };\r\n        _this.handlePagination = function (activePage) { return _this.setState({ activePage: activePage }, function () { return _this.transition(); }); };\r\n        _this.getAudits = function () {\r\n            var _a = _this.state, activePage = _a.activePage, itemsPerPage = _a.itemsPerPage, sort = _a.sort, order = _a.order, fromDate = _a.fromDate, toDate = _a.toDate;\r\n            _this.props.getAudits(activePage - 1, itemsPerPage, sort + \",\" + order, fromDate, toDate);\r\n        };\r\n        return _this;\r\n    }\r\n    AuditsPage.prototype.componentDidMount = function () {\r\n        this.getAudits();\r\n    };\r\n    AuditsPage.prototype.render = function () {\r\n        var _a = this.props, audits = _a.audits, totalItems = _a.totalItems;\r\n        var _b = this.state, fromDate = _b.fromDate, toDate = _b.toDate;\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(\"h2\", { id: \"audits-page-heading\" }, \"Audits\"),\r\n            React.createElement(\"span\", null, \"from\"),\r\n            React.createElement(Input, { type: \"date\", value: fromDate, onChange: this.onChangeFromDate, name: \"fromDate\", id: \"fromDate\" }),\r\n            React.createElement(\"span\", null, \"to\"),\r\n            React.createElement(Input, { type: \"date\", value: toDate, onChange: this.onChangeToDate, name: \"toDate\", id: \"toDate\" }),\r\n            React.createElement(Table, { striped: true, responsive: true },\r\n                React.createElement(\"thead\", null,\r\n                    React.createElement(\"tr\", null,\r\n                        React.createElement(\"th\", { onClick: this.sort('auditEventDate') },\r\n                            \"Date\",\r\n                            React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                        React.createElement(\"th\", { onClick: this.sort('principal') },\r\n                            \"User\",\r\n                            React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                        React.createElement(\"th\", { onClick: this.sort('auditEventType') },\r\n                            \"State\",\r\n                            React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                        React.createElement(\"th\", null, \"Extra data\"))),\r\n                React.createElement(\"tbody\", null, audits.map(function (audit, i) { return (React.createElement(\"tr\", { key: \"audit-\" + i },\r\n                    React.createElement(\"td\", null, React.createElement(TextFormat, { value: audit.timestamp, type: \"date\", format: APP_TIMESTAMP_FORMAT })),\r\n                    React.createElement(\"td\", null, audit.principal),\r\n                    React.createElement(\"td\", null, audit.type),\r\n                    React.createElement(\"td\", null,\r\n                        audit.data ? audit.data.message : null,\r\n                        audit.data ? audit.data.remoteAddress : null))); }))),\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(JhiPagination, { items: getPaginationItemsNumber(totalItems, this.state.itemsPerPage), activePage: this.state.activePage, onSelect: this.handlePagination, maxButtons: 5 }))));\r\n    };\r\n    return AuditsPage;\r\n}(React.Component));\r\nexport { AuditsPage };\r\nvar mapStateToProps = function (storeState) { return ({\r\n    audits: storeState.administration.audits,\r\n    totalItems: storeState.administration.totalItems\r\n}); };\r\nvar mapDispatchToProps = { getAudits: getAudits };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuditsPage);\r\n",{"version":3,"file":"H:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\administration\\audits\\audits.tsx","sourceRoot":"","sources":["H:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!H:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\administration\\audits\\audits.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Input, Row, Table } from 'reactstrap';\r\nimport { TextFormat, JhiPagination, getPaginationItemsNumber, getSortState, IPaginationBaseState } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { APP_TIMESTAMP_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getAudits } from '../administration.reducer';\r\n\r\nexport interface IAuditsPageProps extends StateProps, DispatchProps, RouteComponentProps<{}> {}\r\n\r\nexport interface IAuditsPageState extends IPaginationBaseState {\r\n  fromDate: string;\r\n  toDate: string;\r\n}\r\n\r\nconst previousMonth = (): string => {\r\n  const now: Date = new Date();\r\n  const fromDate =\r\n    now.getMonth() === 0\r\n      ? new Date(now.getFullYear() - 1, 11, now.getDate())\r\n      : new Date(now.getFullYear(), now.getMonth() - 1, now.getDate());\r\n  return fromDate.toISOString().slice(0, 10);\r\n};\r\n\r\nconst today = (): string => {\r\n  // Today + 1 day - needed if the current day must be included\r\n  const day: Date = new Date();\r\n  day.setDate(day.getDate() + 1);\r\n  const toDate = new Date(day.getFullYear(), day.getMonth(), day.getDate());\r\n  return toDate.toISOString().slice(0, 10);\r\n};\r\n\r\nexport class AuditsPage extends React.Component<IAuditsPageProps, IAuditsPageState> {\r\n  state: IAuditsPageState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE),\r\n    fromDate: previousMonth(),\r\n    toDate: today()\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAudits();\r\n  }\r\n\r\n  onChangeFromDate = evt => {\r\n    this.setState(\r\n      {\r\n        fromDate: evt.target.value\r\n      },\r\n      () => this.getAudits()\r\n    );\r\n  };\r\n  onChangeToDate = evt => {\r\n    this.setState(\r\n      {\r\n        toDate: evt.target.value\r\n      },\r\n      () => this.getAudits()\r\n    );\r\n  };\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.transition()\r\n    );\r\n  };\r\n\r\n  transition = () => {\r\n    this.getAudits();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  };\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.transition());\r\n\r\n  getAudits = () => {\r\n    const { activePage, itemsPerPage, sort, order, fromDate, toDate } = this.state;\r\n    this.props.getAudits(activePage - 1, itemsPerPage, `${sort},${order}`, fromDate, toDate);\r\n  };\r\n\r\n  render() {\r\n    const { audits, totalItems } = this.props;\r\n    const { fromDate, toDate } = this.state;\r\n    return (\r\n      <div>\r\n        <h2 id=\"audits-page-heading\">Audits</h2>\r\n        <span>from</span>\r\n        <Input type=\"date\" value={fromDate} onChange={this.onChangeFromDate} name=\"fromDate\" id=\"fromDate\" />\r\n        <span>to</span>\r\n        <Input type=\"date\" value={toDate} onChange={this.onChangeToDate} name=\"toDate\" id=\"toDate\" />\r\n        <Table striped responsive>\r\n          <thead>\r\n            <tr>\r\n              <th onClick={this.sort('auditEventDate')}>\r\n                Date\r\n                <FontAwesomeIcon icon=\"sort\" />\r\n              </th>\r\n              <th onClick={this.sort('principal')}>\r\n                User\r\n                <FontAwesomeIcon icon=\"sort\" />\r\n              </th>\r\n              <th onClick={this.sort('auditEventType')}>\r\n                State\r\n                <FontAwesomeIcon icon=\"sort\" />\r\n              </th>\r\n              <th>Extra data</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {audits.map((audit, i) => (\r\n              <tr key={`audit-${i}`}>\r\n                <td>{<TextFormat value={audit.timestamp} type=\"date\" format={APP_TIMESTAMP_FORMAT} />}</td>\r\n                <td>{audit.principal}</td>\r\n                <td>{audit.type}</td>\r\n                <td>\r\n                  {audit.data ? audit.data.message : null}\r\n                  {audit.data ? audit.data.remoteAddress : null}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  audits: storeState.administration.audits,\r\n  totalItems: storeState.administration.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = { getAudits };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AuditsPage);\r\n"]}]}