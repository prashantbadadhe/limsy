{"remainingRequest":"G:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!G:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js??ref--4-3!G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!G:\\projects\\limsy-application\\src\\main\\webapp\\app\\shared\\reducers\\application-profile.ts","dependencies":[{"path":"G:\\projects\\limsy-application\\src\\main\\webapp\\app\\shared\\reducers\\application-profile.ts","mtime":1549223105154},{"path":"G:\\projects\\limsy-application\\node_modules\\react-hot-loader\\webpack.js","mtime":1549223610051},{"path":"G:\\projects\\limsy-application\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1549223563882},{"path":"G:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1549223563895},{"path":"G:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js","mtime":1549223611188},{"path":"G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js","mtime":1549223603361}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport axios from 'axios';\r\nimport { SUCCESS } from 'app/shared/reducers/action-type.util';\r\nexport var ACTION_TYPES = {\r\n    GET_PROFILE: 'applicationProfile/GET_PROFILE'\r\n};\r\nvar initialState = {\r\n    ribbonEnv: '',\r\n    inProduction: true,\r\n    isSwaggerEnabled: false\r\n};\r\nexport default (function (state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    switch (action.type) {\r\n        case SUCCESS(ACTION_TYPES.GET_PROFILE):\r\n            var data = action.payload.data;\r\n            return tslib_1.__assign({}, state, { ribbonEnv: data['display-ribbon-on-profiles'], inProduction: data.activeProfiles.includes('prod'), isSwaggerEnabled: data.activeProfiles.includes('swagger') });\r\n        default:\r\n            return state;\r\n    }\r\n});\r\nexport var getProfile = function () { return ({\r\n    type: ACTION_TYPES.GET_PROFILE,\r\n    payload: axios.get('management/info')\r\n}); };\r\n",{"version":3,"file":"G:\\projects\\limsy-application\\src\\main\\webapp\\app\\shared\\reducers\\application-profile.ts","sourceRoot":"","sources":["G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!G:\\projects\\limsy-application\\src\\main\\webapp\\app\\shared\\reducers\\application-profile.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,OAAO,EAAE,MAAM,sCAAsC,CAAC;AAE/D,MAAM,CAAC,IAAM,YAAY,GAAG;IAC1B,WAAW,EAAE,gCAAgC;CAC9C,CAAC;AAEF,IAAM,YAAY,GAAG;IACnB,SAAS,EAAE,EAAE;IACb,YAAY,EAAE,IAAI;IAClB,gBAAgB,EAAE,KAAK;CACxB,CAAC;AAIF,gBAAe,UAAC,KAA6C,EAAE,MAAM;IAArD,sBAAA,EAAA,oBAA6C;IAC3D,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC;YAC5B,IAAA,0BAAI,CAAoB;YAChC,4BACK,KAAK,IACR,SAAS,EAAE,IAAI,CAAC,4BAA4B,CAAC,EAC7C,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,EAClD,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,IACzD;QACJ;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC,EAAC;AAEF,MAAM,CAAC,IAAM,UAAU,GAAG,cAAM,OAAA,CAAC;IAC/B,IAAI,EAAE,YAAY,CAAC,WAAW;IAC9B,OAAO,EAAE,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC;CACtC,CAAC,EAH8B,CAG9B,CAAC","sourcesContent":["import axios from 'axios';\r\n\r\nimport { SUCCESS } from 'app/shared/reducers/action-type.util';\r\n\r\nexport const ACTION_TYPES = {\r\n  GET_PROFILE: 'applicationProfile/GET_PROFILE'\r\n};\r\n\r\nconst initialState = {\r\n  ribbonEnv: '',\r\n  inProduction: true,\r\n  isSwaggerEnabled: false\r\n};\r\n\r\nexport type ApplicationProfileState = Readonly<typeof initialState>;\r\n\r\nexport default (state: ApplicationProfileState = initialState, action): ApplicationProfileState => {\r\n  switch (action.type) {\r\n    case SUCCESS(ACTION_TYPES.GET_PROFILE):\r\n      const { data } = action.payload;\r\n      return {\r\n        ...state,\r\n        ribbonEnv: data['display-ribbon-on-profiles'],\r\n        inProduction: data.activeProfiles.includes('prod'),\r\n        isSwaggerEnabled: data.activeProfiles.includes('swagger')\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getProfile = () => ({\r\n  type: ACTION_TYPES.GET_PROFILE,\r\n  payload: axios.get('management/info')\r\n});\r\n"]}]}