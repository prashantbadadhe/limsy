{"remainingRequest":"H:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!H:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js??ref--4-3!H:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!H:\\projects\\limsy-application\\src\\main\\webapp\\app\\entities\\location\\location-detail.tsx","dependencies":[{"path":"H:\\projects\\limsy-application\\src\\main\\webapp\\app\\entities\\location\\location-detail.tsx","mtime":1556391440906},{"path":"H:\\projects\\limsy-application\\node_modules\\react-hot-loader\\webpack.js","mtime":1549223610051},{"path":"H:\\projects\\limsy-application\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1549223563882},{"path":"H:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1549223563895},{"path":"H:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js","mtime":1549223611188},{"path":"H:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js","mtime":1549223603361}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntity } from './location.reducer';\r\nvar LocationDetail = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LocationDetail, _super);\r\n    function LocationDetail() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    LocationDetail.prototype.componentDidMount = function () {\r\n        this.props.getEntity(this.props.match.params.id);\r\n    };\r\n    LocationDetail.prototype.render = function () {\r\n        var locationEntity = this.props.locationEntity;\r\n        return (React.createElement(Row, null,\r\n            React.createElement(Col, { md: \"8\" },\r\n                React.createElement(\"h2\", null,\r\n                    \"Location [\",\r\n                    React.createElement(\"b\", null, locationEntity.id),\r\n                    \"]\"),\r\n                React.createElement(\"dl\", { className: \"jh-entity-details\" },\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"area\" }, \"Area\")),\r\n                    React.createElement(\"dd\", null, locationEntity.area),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"zip\" }, \"Zip\")),\r\n                    React.createElement(\"dd\", null, locationEntity.zip),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"city\" }, \"City\")),\r\n                    React.createElement(\"dd\", null, locationEntity.city),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"state\" }, \"State\")),\r\n                    React.createElement(\"dd\", null, locationEntity.state),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"country\" }, \"Country\")),\r\n                    React.createElement(\"dd\", null, locationEntity.country)),\r\n                React.createElement(Button, { tag: Link, to: \"/entity/location\", replace: true, color: \"info\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                    \" \",\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" }, \"Back\")),\r\n                \"\\u00A0\",\r\n                React.createElement(Button, { tag: Link, to: \"/entity/location/\" + locationEntity.id + \"/edit\", replace: true, color: \"primary\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\r\n                    \" \",\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" }, \"Edit\")))));\r\n    };\r\n    return LocationDetail;\r\n}(React.Component));\r\nexport { LocationDetail };\r\nvar mapStateToProps = function (_a) {\r\n    var location = _a.location;\r\n    return ({\r\n        locationEntity: location.entity\r\n    });\r\n};\r\nvar mapDispatchToProps = { getEntity: getEntity };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationDetail);\r\n",{"version":3,"file":"H:\\projects\\limsy-application\\src\\main\\webapp\\app\\entities\\location\\location-detail.tsx","sourceRoot":"","sources":["H:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!H:\\projects\\limsy-application\\src\\main\\webapp\\app\\entities\\location\\location-detail.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,IAAI,EAAuB,MAAM,kBAAkB,CAAC;AAC7D,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,YAAY,CAAC;AAG9C,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AAGjE,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAO/C;IAAoC,0CAAqC;IAAzE;;IA6CA,CAAC;IA5CC,0CAAiB,GAAjB;QACE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,+BAAM,GAAN;QACU,IAAA,0CAAc,CAAgB;QACtC,OAAO,CACL,oBAAC,GAAG;YACF,oBAAC,GAAG,IAAC,EAAE,EAAC,GAAG;gBACT;;oBACY,+BAAI,cAAc,CAAC,EAAE,CAAK;wBACjC;gBACL,4BAAI,SAAS,EAAC,mBAAmB;oBAC/B;wBACE,8BAAM,EAAE,EAAC,MAAM,WAAY,CACxB;oBACL,gCAAK,cAAc,CAAC,IAAI,CAAM;oBAC9B;wBACE,8BAAM,EAAE,EAAC,KAAK,UAAW,CACtB;oBACL,gCAAK,cAAc,CAAC,GAAG,CAAM;oBAC7B;wBACE,8BAAM,EAAE,EAAC,MAAM,WAAY,CACxB;oBACL,gCAAK,cAAc,CAAC,IAAI,CAAM;oBAC9B;wBACE,8BAAM,EAAE,EAAC,OAAO,YAAa,CAC1B;oBACL,gCAAK,cAAc,CAAC,KAAK,CAAM;oBAC/B;wBACE,8BAAM,EAAE,EAAC,SAAS,cAAe,CAC9B;oBACL,gCAAK,cAAc,CAAC,OAAO,CAAM,CAC9B;gBACL,oBAAC,MAAM,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAC,kBAAkB,EAAC,OAAO,QAAC,KAAK,EAAC,MAAM;oBAC3D,oBAAC,eAAe,IAAC,IAAI,EAAC,YAAY,GAAG;;oBAAC,8BAAM,SAAS,EAAC,oBAAoB,WAAY,CAC/E;;gBACT,oBAAC,MAAM,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,sBAAoB,cAAc,CAAC,EAAE,UAAO,EAAE,OAAO,QAAC,KAAK,EAAC,SAAS;oBAC1F,oBAAC,eAAe,IAAC,IAAI,EAAC,YAAY,GAAG;;oBAAC,8BAAM,SAAS,EAAC,oBAAoB,WAAY,CAC/E,CACL,CACF,CACP,CAAC;IACJ,CAAC;IACH,qBAAC;AAAD,CAAC,AA7CD,CAAoC,KAAK,CAAC,SAAS,GA6ClD;;AAED,IAAM,eAAe,GAAG,UAAC,EAAwB;QAAtB,sBAAQ;IAAmB,OAAA,CAAC;QACrD,cAAc,EAAE,QAAQ,CAAC,MAAM;KAChC,CAAC;AAFoD,CAEpD,CAAC;AAEH,IAAM,kBAAkB,GAAG,EAAE,SAAS,WAAA,EAAE,CAAC;AAKzC,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,cAAc,CAAC,CAAC","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './location.reducer';\r\nimport { ILocation } from 'app/shared/model/location.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface ILocationDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class LocationDetail extends React.Component<ILocationDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { locationEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            Location [<b>{locationEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"area\">Area</span>\r\n            </dt>\r\n            <dd>{locationEntity.area}</dd>\r\n            <dt>\r\n              <span id=\"zip\">Zip</span>\r\n            </dt>\r\n            <dd>{locationEntity.zip}</dd>\r\n            <dt>\r\n              <span id=\"city\">City</span>\r\n            </dt>\r\n            <dd>{locationEntity.city}</dd>\r\n            <dt>\r\n              <span id=\"state\">State</span>\r\n            </dt>\r\n            <dd>{locationEntity.state}</dd>\r\n            <dt>\r\n              <span id=\"country\">Country</span>\r\n            </dt>\r\n            <dd>{locationEntity.country}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/location\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" /> <span className=\"d-none d-md-inline\">Back</span>\r\n          </Button>&nbsp;\r\n          <Button tag={Link} to={`/entity/location/${locationEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" /> <span className=\"d-none d-md-inline\">Edit</span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ location }: IRootState) => ({\r\n  locationEntity: location.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LocationDetail);\r\n"]}]}