{"remainingRequest":"G:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!G:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js??ref--4-3!G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!G:\\projects\\limsy-application\\src\\main\\webapp\\app\\app.tsx","dependencies":[{"path":"G:\\projects\\limsy-application\\src\\main\\webapp\\app\\app.tsx","mtime":1549223105070},{"path":"G:\\projects\\limsy-application\\node_modules\\react-hot-loader\\webpack.js","mtime":1549223610051},{"path":"G:\\projects\\limsy-application\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1549223563882},{"path":"G:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1549223563895},{"path":"G:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js","mtime":1549223611188},{"path":"G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js","mtime":1549223603361}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './app.scss';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Card } from 'reactstrap';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { getSession } from 'app/shared/reducers/authentication';\r\nimport { getProfile } from 'app/shared/reducers/application-profile';\r\nimport Header from 'app/shared/layout/header/header';\r\nimport Footer from 'app/shared/layout/footer/footer';\r\nimport { hasAnyAuthority } from 'app/shared/auth/private-route';\r\nimport ErrorBoundary from 'app/shared/error/error-boundary';\r\nimport { AUTHORITIES } from 'app/config/constants';\r\nimport AppRoutes from 'app/routes';\r\nvar App = /** @class */ (function (_super) {\r\n    tslib_1.__extends(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    App.prototype.componentDidMount = function () {\r\n        this.props.getSession();\r\n        this.props.getProfile();\r\n    };\r\n    App.prototype.render = function () {\r\n        var paddingTop = '60px';\r\n        return (React.createElement(Router, null,\r\n            React.createElement(\"div\", { className: \"app-container\", style: { paddingTop: paddingTop } },\r\n                React.createElement(ToastContainer, { position: toast.POSITION.TOP_LEFT, className: \"toastify-container\", toastClassName: \"toastify-toast\" }),\r\n                React.createElement(ErrorBoundary, null,\r\n                    React.createElement(Header, { isAuthenticated: this.props.isAuthenticated, isAdmin: this.props.isAdmin, ribbonEnv: this.props.ribbonEnv, isInProduction: this.props.isInProduction, isSwaggerEnabled: this.props.isSwaggerEnabled })),\r\n                React.createElement(\"div\", { className: \"container-fluid view-container\", id: \"app-view-container\" },\r\n                    React.createElement(Card, { className: \"jh-card\" },\r\n                        React.createElement(ErrorBoundary, null,\r\n                            React.createElement(AppRoutes, null))),\r\n                    React.createElement(Footer, null)))));\r\n    };\r\n    return App;\r\n}(React.Component));\r\nexport { App };\r\nvar mapStateToProps = function (_a) {\r\n    var authentication = _a.authentication, applicationProfile = _a.applicationProfile;\r\n    return ({\r\n        isAuthenticated: authentication.isAuthenticated,\r\n        isAdmin: hasAnyAuthority(authentication.account.authorities, [AUTHORITIES.ADMIN]),\r\n        ribbonEnv: applicationProfile.ribbonEnv,\r\n        isInProduction: applicationProfile.inProduction,\r\n        isSwaggerEnabled: applicationProfile.isSwaggerEnabled\r\n    });\r\n};\r\nvar mapDispatchToProps = { getSession: getSession, getProfile: getProfile };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n",{"version":3,"file":"G:\\projects\\limsy-application\\src\\main\\webapp\\app\\app.tsx","sourceRoot":"","sources":["G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!G:\\projects\\limsy-application\\src\\main\\webapp\\app\\app.tsx"],"names":[],"mappings":";AAAA,OAAO,uCAAuC,CAAC;AAC/C,OAAO,YAAY,CAAC;AAEpB,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAClC,OAAO,EAAE,UAAU,IAAI,MAAM,EAAE,MAAM,kBAAkB,CAAC;AACxD,OAAO,EAAE,cAAc,EAAiB,KAAK,EAAE,MAAM,gBAAgB,CAAC;AAGtE,OAAO,EAAE,UAAU,EAAE,MAAM,oCAAoC,CAAC;AAChE,OAAO,EAAE,UAAU,EAAE,MAAM,yCAAyC,CAAC;AACrE,OAAO,MAAM,MAAM,iCAAiC,CAAC;AACrD,OAAO,MAAM,MAAM,iCAAiC,CAAC;AACrD,OAAO,EAAE,eAAe,EAAE,MAAM,+BAA+B,CAAC;AAChE,OAAO,aAAa,MAAM,iCAAiC,CAAC;AAC5D,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AACnD,OAAO,SAAS,MAAM,YAAY,CAAC;AAInC;IAAyB,+BAA0B;IAAnD;;IAqCA,CAAC;IApCC,+BAAiB,GAAjB;QACE,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IAC1B,CAAC;IAED,oBAAM,GAAN;QACE,IAAM,UAAU,GAAG,MAAM,CAAC;QAC1B,OAAO,CACL,oBAAC,MAAM;YACL,6BAAK,SAAS,EAAC,eAAe,EAAC,KAAK,EAAE,EAAE,UAAU,YAAA,EAAE;gBAClD,oBAAC,cAAc,IACb,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAyB,EAClD,SAAS,EAAC,oBAAoB,EAC9B,cAAc,EAAC,gBAAgB,GAC/B;gBACF,oBAAC,aAAa;oBACZ,oBAAC,MAAM,IACL,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EAC3C,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAC3B,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAC/B,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EACzC,gBAAgB,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAC7C,CACY;gBAChB,6BAAK,SAAS,EAAC,gCAAgC,EAAC,EAAE,EAAC,oBAAoB;oBACrE,oBAAC,IAAI,IAAC,SAAS,EAAC,SAAS;wBACvB,oBAAC,aAAa;4BACZ,oBAAC,SAAS,OAAG,CACC,CACX;oBACP,oBAAC,MAAM,OAAG,CACN,CACF,CACC,CACV,CAAC;IACJ,CAAC;IACH,UAAC;AAAD,CAAC,AArCD,CAAyB,KAAK,CAAC,SAAS,GAqCvC;;AAED,IAAM,eAAe,GAAG,UAAC,EAAkD;QAAhD,kCAAc,EAAE,0CAAkB;IAAmB,OAAA,CAAC;QAC/E,eAAe,EAAE,cAAc,CAAC,eAAe;QAC/C,OAAO,EAAE,eAAe,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACjF,SAAS,EAAE,kBAAkB,CAAC,SAAS;QACvC,cAAc,EAAE,kBAAkB,CAAC,YAAY;QAC/C,gBAAgB,EAAE,kBAAkB,CAAC,gBAAgB;KACtD,CAAC;AAN8E,CAM9E,CAAC;AAEH,IAAM,kBAAkB,GAAG,EAAE,UAAU,YAAA,EAAE,UAAU,YAAA,EAAE,CAAC;AAKtD,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,GAAG,CAAC,CAAC","sourcesContent":["import 'react-toastify/dist/ReactToastify.css';\r\nimport './app.scss';\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Card } from 'reactstrap';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { ToastContainer, ToastPosition, toast } from 'react-toastify';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getSession } from 'app/shared/reducers/authentication';\r\nimport { getProfile } from 'app/shared/reducers/application-profile';\r\nimport Header from 'app/shared/layout/header/header';\r\nimport Footer from 'app/shared/layout/footer/footer';\r\nimport { hasAnyAuthority } from 'app/shared/auth/private-route';\r\nimport ErrorBoundary from 'app/shared/error/error-boundary';\r\nimport { AUTHORITIES } from 'app/config/constants';\r\nimport AppRoutes from 'app/routes';\r\n\r\nexport interface IAppProps extends StateProps, DispatchProps {}\r\n\r\nexport class App extends React.Component<IAppProps> {\r\n  componentDidMount() {\r\n    this.props.getSession();\r\n    this.props.getProfile();\r\n  }\r\n\r\n  render() {\r\n    const paddingTop = '60px';\r\n    return (\r\n      <Router>\r\n        <div className=\"app-container\" style={{ paddingTop }}>\r\n          <ToastContainer\r\n            position={toast.POSITION.TOP_LEFT as ToastPosition}\r\n            className=\"toastify-container\"\r\n            toastClassName=\"toastify-toast\"\r\n          />\r\n          <ErrorBoundary>\r\n            <Header\r\n              isAuthenticated={this.props.isAuthenticated}\r\n              isAdmin={this.props.isAdmin}\r\n              ribbonEnv={this.props.ribbonEnv}\r\n              isInProduction={this.props.isInProduction}\r\n              isSwaggerEnabled={this.props.isSwaggerEnabled}\r\n            />\r\n          </ErrorBoundary>\r\n          <div className=\"container-fluid view-container\" id=\"app-view-container\">\r\n            <Card className=\"jh-card\">\r\n              <ErrorBoundary>\r\n                <AppRoutes />\r\n              </ErrorBoundary>\r\n            </Card>\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ authentication, applicationProfile }: IRootState) => ({\r\n  isAuthenticated: authentication.isAuthenticated,\r\n  isAdmin: hasAnyAuthority(authentication.account.authorities, [AUTHORITIES.ADMIN]),\r\n  ribbonEnv: applicationProfile.ribbonEnv,\r\n  isInProduction: applicationProfile.inProduction,\r\n  isSwaggerEnabled: applicationProfile.isSwaggerEnabled\r\n});\r\n\r\nconst mapDispatchToProps = { getSession, getProfile };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n"]}]}