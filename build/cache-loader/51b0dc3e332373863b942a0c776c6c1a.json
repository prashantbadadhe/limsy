{"remainingRequest":"G:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!G:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js??ref--4-3!G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!G:\\projects\\limsy-application\\src\\main\\webapp\\app\\entities\\used\\used-detail.tsx","dependencies":[{"path":"G:\\projects\\limsy-application\\src\\main\\webapp\\app\\entities\\used\\used-detail.tsx","mtime":1556391440909},{"path":"G:\\projects\\limsy-application\\node_modules\\react-hot-loader\\webpack.js","mtime":1549223610051},{"path":"G:\\projects\\limsy-application\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1549223563882},{"path":"G:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1549223563895},{"path":"G:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js","mtime":1549223611188},{"path":"G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js","mtime":1549223603361}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntity } from './used.reducer';\r\nvar UsedDetail = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UsedDetail, _super);\r\n    function UsedDetail() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    UsedDetail.prototype.componentDidMount = function () {\r\n        this.props.getEntity(this.props.match.params.id);\r\n    };\r\n    UsedDetail.prototype.render = function () {\r\n        var usedEntity = this.props.usedEntity;\r\n        return (React.createElement(Row, null,\r\n            React.createElement(Col, { md: \"8\" },\r\n                React.createElement(\"h2\", null,\r\n                    \"Used [\",\r\n                    React.createElement(\"b\", null, usedEntity.id),\r\n                    \"]\"),\r\n                React.createElement(\"dl\", { className: \"jh-entity-details\" },\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"selected\" }, \"Selected\")),\r\n                    React.createElement(\"dd\", null, usedEntity.selected ? 'true' : 'false'),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"manualSelect\" }, \"Manual Select\")),\r\n                    React.createElement(\"dd\", null, usedEntity.manualSelect ? 'true' : 'false'),\r\n                    React.createElement(\"dt\", null, \"Suggestion\"),\r\n                    React.createElement(\"dd\", null, usedEntity.suggestion ? usedEntity.suggestion.date : ''),\r\n                    React.createElement(\"dt\", null, \"Dress\"),\r\n                    React.createElement(\"dd\", null, usedEntity.dress ? usedEntity.dress.image : '')),\r\n                React.createElement(Button, { tag: Link, to: \"/entity/used\", replace: true, color: \"info\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                    \" \",\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" }, \"Back\")),\r\n                \"\\u00A0\",\r\n                React.createElement(Button, { tag: Link, to: \"/entity/used/\" + usedEntity.id + \"/edit\", replace: true, color: \"primary\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\r\n                    \" \",\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" }, \"Edit\")))));\r\n    };\r\n    return UsedDetail;\r\n}(React.Component));\r\nexport { UsedDetail };\r\nvar mapStateToProps = function (_a) {\r\n    var used = _a.used;\r\n    return ({\r\n        usedEntity: used.entity\r\n    });\r\n};\r\nvar mapDispatchToProps = { getEntity: getEntity };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsedDetail);\r\n",{"version":3,"file":"G:\\projects\\limsy-application\\src\\main\\webapp\\app\\entities\\used\\used-detail.tsx","sourceRoot":"","sources":["G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!G:\\projects\\limsy-application\\src\\main\\webapp\\app\\entities\\used\\used-detail.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,IAAI,EAAuB,MAAM,kBAAkB,CAAC;AAC7D,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,YAAY,CAAC;AAG9C,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AAGjE,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAO3C;IAAgC,sCAAiC;IAAjE;;IAqCA,CAAC;IApCC,sCAAiB,GAAjB;QACE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,2BAAM,GAAN;QACU,IAAA,kCAAU,CAAgB;QAClC,OAAO,CACL,oBAAC,GAAG;YACF,oBAAC,GAAG,IAAC,EAAE,EAAC,GAAG;gBACT;;oBACQ,+BAAI,UAAU,CAAC,EAAE,CAAK;wBACzB;gBACL,4BAAI,SAAS,EAAC,mBAAmB;oBAC/B;wBACE,8BAAM,EAAE,EAAC,UAAU,eAAgB,CAChC;oBACL,gCAAK,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAM;oBACjD;wBACE,8BAAM,EAAE,EAAC,cAAc,oBAAqB,CACzC;oBACL,gCAAK,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAM;oBACrD,6CAAmB;oBACnB,gCAAK,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAM;oBAClE,wCAAc;oBACd,gCAAK,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAM,CACtD;gBACL,oBAAC,MAAM,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAC,cAAc,EAAC,OAAO,QAAC,KAAK,EAAC,MAAM;oBACvD,oBAAC,eAAe,IAAC,IAAI,EAAC,YAAY,GAAG;;oBAAC,8BAAM,SAAS,EAAC,oBAAoB,WAAY,CAC/E;;gBACT,oBAAC,MAAM,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,kBAAgB,UAAU,CAAC,EAAE,UAAO,EAAE,OAAO,QAAC,KAAK,EAAC,SAAS;oBAClF,oBAAC,eAAe,IAAC,IAAI,EAAC,YAAY,GAAG;;oBAAC,8BAAM,SAAS,EAAC,oBAAoB,WAAY,CAC/E,CACL,CACF,CACP,CAAC;IACJ,CAAC;IACH,iBAAC;AAAD,CAAC,AArCD,CAAgC,KAAK,CAAC,SAAS,GAqC9C;;AAED,IAAM,eAAe,GAAG,UAAC,EAAoB;QAAlB,cAAI;IAAmB,OAAA,CAAC;QACjD,UAAU,EAAE,IAAI,CAAC,MAAM;KACxB,CAAC;AAFgD,CAEhD,CAAC;AAEH,IAAM,kBAAkB,GAAG,EAAE,SAAS,WAAA,EAAE,CAAC;AAKzC,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,UAAU,CAAC,CAAC","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './used.reducer';\r\nimport { IUsed } from 'app/shared/model/used.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IUsedDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class UsedDetail extends React.Component<IUsedDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { usedEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            Used [<b>{usedEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"selected\">Selected</span>\r\n            </dt>\r\n            <dd>{usedEntity.selected ? 'true' : 'false'}</dd>\r\n            <dt>\r\n              <span id=\"manualSelect\">Manual Select</span>\r\n            </dt>\r\n            <dd>{usedEntity.manualSelect ? 'true' : 'false'}</dd>\r\n            <dt>Suggestion</dt>\r\n            <dd>{usedEntity.suggestion ? usedEntity.suggestion.date : ''}</dd>\r\n            <dt>Dress</dt>\r\n            <dd>{usedEntity.dress ? usedEntity.dress.image : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/used\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" /> <span className=\"d-none d-md-inline\">Back</span>\r\n          </Button>&nbsp;\r\n          <Button tag={Link} to={`/entity/used/${usedEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" /> <span className=\"d-none d-md-inline\">Edit</span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ used }: IRootState) => ({\r\n  usedEntity: used.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UsedDetail);\r\n"]}]}