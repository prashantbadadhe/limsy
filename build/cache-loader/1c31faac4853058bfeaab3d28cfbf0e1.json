{"remainingRequest":"H:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!H:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js??ref--4-3!H:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!H:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management.tsx","dependencies":[{"path":"H:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management.tsx","mtime":1556391440913},{"path":"H:\\projects\\limsy-application\\node_modules\\react-hot-loader\\webpack.js","mtime":1549223610051},{"path":"H:\\projects\\limsy-application\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1549223563882},{"path":"H:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1549223563895},{"path":"H:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js","mtime":1549223611188},{"path":"H:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js","mtime":1549223603361}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Table, Row, Badge } from 'reactstrap';\r\nimport { TextFormat, JhiPagination, getPaginationItemsNumber, getSortState } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { APP_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\nimport { getUsers, updateUser } from './user-management.reducer';\r\nvar UserManagement = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserManagement, _super);\r\n    function UserManagement() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = tslib_1.__assign({}, getSortState(_this.props.location, ITEMS_PER_PAGE));\r\n        _this.sort = function (prop) { return function () {\r\n            _this.setState({\r\n                order: _this.state.order === 'asc' ? 'desc' : 'asc',\r\n                sort: prop\r\n            }, function () { return _this.sortUsers(); });\r\n        }; };\r\n        _this.handlePagination = function (activePage) { return _this.setState({ activePage: activePage }, function () { return _this.sortUsers(); }); };\r\n        _this.getUsers = function () {\r\n            var _a = _this.state, activePage = _a.activePage, itemsPerPage = _a.itemsPerPage, sort = _a.sort, order = _a.order;\r\n            _this.props.getUsers(activePage - 1, itemsPerPage, sort + \",\" + order);\r\n        };\r\n        _this.toggleActive = function (user) { return function () {\r\n            _this.props.updateUser(tslib_1.__assign({}, user, { activated: !user.activated }));\r\n        }; };\r\n        return _this;\r\n    }\r\n    UserManagement.prototype.componentDidMount = function () {\r\n        this.getUsers();\r\n    };\r\n    UserManagement.prototype.sortUsers = function () {\r\n        this.getUsers();\r\n        this.props.history.push(this.props.location.pathname + \"?page=\" + this.state.activePage + \"&sort=\" + this.state.sort + \",\" + this.state.order);\r\n    };\r\n    UserManagement.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.props, users = _a.users, account = _a.account, match = _a.match, totalItems = _a.totalItems;\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(\"h2\", { id: \"user-management-page-heading\" },\r\n                \"Users\",\r\n                React.createElement(Link, { to: match.url + \"/new\", className: \"btn btn-primary float-right jh-create-entity\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"plus\" }),\r\n                    \" Create a new user\")),\r\n            React.createElement(Table, { responsive: true, striped: true },\r\n                React.createElement(\"thead\", null,\r\n                    React.createElement(\"tr\", null,\r\n                        React.createElement(\"th\", { className: \"hand\", onClick: this.sort('id') },\r\n                            \"ID\",\r\n                            React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                        React.createElement(\"th\", { className: \"hand\", onClick: this.sort('login') },\r\n                            \"Login\",\r\n                            React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                        React.createElement(\"th\", { className: \"hand\", onClick: this.sort('email') },\r\n                            \"Email\",\r\n                            React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                        React.createElement(\"th\", null),\r\n                        React.createElement(\"th\", null, \"Profiles\"),\r\n                        React.createElement(\"th\", { className: \"hand\", onClick: this.sort('createdDate') },\r\n                            \"Created Date\",\r\n                            React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                        React.createElement(\"th\", { className: \"hand\", onClick: this.sort('lastModifiedBy') },\r\n                            \"Last Modified By\",\r\n                            React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                        React.createElement(\"th\", { id: \"modified-date-sort\", className: \"hand\", onClick: this.sort('lastModifiedDate') },\r\n                            \"Last Modified Date\",\r\n                            React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\r\n                        React.createElement(\"th\", null))),\r\n                React.createElement(\"tbody\", null, users.map(function (user, i) { return (React.createElement(\"tr\", { id: user.login, key: \"user-\" + i },\r\n                    React.createElement(\"td\", null,\r\n                        React.createElement(Button, { tag: Link, to: match.url + \"/\" + user.login, color: \"link\", size: \"sm\" }, user.id)),\r\n                    React.createElement(\"td\", null, user.login),\r\n                    React.createElement(\"td\", null, user.email),\r\n                    React.createElement(\"td\", null, user.activated ? (React.createElement(Button, { color: \"success\", onClick: _this.toggleActive(user) }, \"Activated\")) : (React.createElement(Button, { color: \"danger\", onClick: _this.toggleActive(user) }, \"Deactivated\"))),\r\n                    React.createElement(\"td\", null, user.authorities\r\n                        ? user.authorities.map(function (authority, j) { return (React.createElement(\"div\", { key: \"user-auth-\" + i + \"-\" + j },\r\n                            React.createElement(Badge, { color: \"info\" }, authority))); })\r\n                        : null),\r\n                    React.createElement(\"td\", null,\r\n                        React.createElement(TextFormat, { value: user.createdDate, type: \"date\", format: APP_DATE_FORMAT, blankOnInvalid: true })),\r\n                    React.createElement(\"td\", null, user.lastModifiedBy),\r\n                    React.createElement(\"td\", null,\r\n                        React.createElement(TextFormat, { value: user.lastModifiedDate, type: \"date\", format: APP_DATE_FORMAT, blankOnInvalid: true })),\r\n                    React.createElement(\"td\", { className: \"text-right\" },\r\n                        React.createElement(\"div\", { className: \"btn-group flex-btn-group-container\" },\r\n                            React.createElement(Button, { tag: Link, to: match.url + \"/\" + user.login, color: \"info\", size: \"sm\" },\r\n                                React.createElement(FontAwesomeIcon, { icon: \"eye\" }),\r\n                                \" \",\r\n                                React.createElement(\"span\", { className: \"d-none d-md-inline\" }, \"View\")),\r\n                            React.createElement(Button, { tag: Link, to: match.url + \"/\" + user.login + \"/edit\", color: \"primary\", size: \"sm\" },\r\n                                React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\r\n                                \" \",\r\n                                React.createElement(\"span\", { className: \"d-none d-md-inline\" }, \"Edit\")),\r\n                            React.createElement(Button, { tag: Link, to: match.url + \"/\" + user.login + \"/delete\", color: \"danger\", size: \"sm\", disabled: account.login === user.login },\r\n                                React.createElement(FontAwesomeIcon, { icon: \"trash\" }),\r\n                                \" \",\r\n                                React.createElement(\"span\", { className: \"d-none d-md-inline\" }, \"Delete\")))))); }))),\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(JhiPagination, { items: getPaginationItemsNumber(totalItems, this.state.itemsPerPage), activePage: this.state.activePage, onSelect: this.handlePagination, maxButtons: 5 }))));\r\n    };\r\n    return UserManagement;\r\n}(React.Component));\r\nexport { UserManagement };\r\nvar mapStateToProps = function (storeState) { return ({\r\n    users: storeState.userManagement.users,\r\n    totalItems: storeState.userManagement.totalItems,\r\n    account: storeState.authentication.account\r\n}); };\r\nvar mapDispatchToProps = { getUsers: getUsers, updateUser: updateUser };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManagement);\r\n",{"version":3,"file":"H:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management.tsx","sourceRoot":"","sources":["H:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!H:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Table, Row, Badge } from 'reactstrap';\r\nimport {\r\n  ICrudGetAllAction,\r\n  ICrudPutAction,\r\n  TextFormat,\r\n  JhiPagination,\r\n  getPaginationItemsNumber,\r\n  getSortState,\r\n  IPaginationBaseState\r\n} from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { APP_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\nimport { getUsers, updateUser } from './user-management.reducer';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nexport interface IUserManagementProps extends StateProps, DispatchProps, RouteComponentProps<{}> {}\r\n\r\nexport class UserManagement extends React.Component<IUserManagementProps, IPaginationBaseState> {\r\n  state: IPaginationBaseState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortUsers()\r\n    );\r\n  };\r\n\r\n  sortUsers() {\r\n    this.getUsers();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortUsers());\r\n\r\n  getUsers = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getUsers(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  toggleActive = user => () => {\r\n    this.props.updateUser({\r\n      ...user,\r\n      activated: !user.activated\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { users, account, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"user-management-page-heading\">\r\n          Users\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" /> Create a new user\r\n          </Link>\r\n        </h2>\r\n        <Table responsive striped>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"hand\" onClick={this.sort('id')}>\r\n                ID<FontAwesomeIcon icon=\"sort\" />\r\n              </th>\r\n              <th className=\"hand\" onClick={this.sort('login')}>\r\n                Login<FontAwesomeIcon icon=\"sort\" />\r\n              </th>\r\n              <th className=\"hand\" onClick={this.sort('email')}>\r\n                Email<FontAwesomeIcon icon=\"sort\" />\r\n              </th>\r\n              <th />\r\n              <th>Profiles</th>\r\n              <th className=\"hand\" onClick={this.sort('createdDate')}>\r\n                Created Date<FontAwesomeIcon icon=\"sort\" />\r\n              </th>\r\n              <th className=\"hand\" onClick={this.sort('lastModifiedBy')}>\r\n                Last Modified By<FontAwesomeIcon icon=\"sort\" />\r\n              </th>\r\n              <th id=\"modified-date-sort\" className=\"hand\" onClick={this.sort('lastModifiedDate')}>\r\n                Last Modified Date<FontAwesomeIcon icon=\"sort\" />\r\n              </th>\r\n              <th />\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user, i) => (\r\n              <tr id={user.login} key={`user-${i}`}>\r\n                <td>\r\n                  <Button tag={Link} to={`${match.url}/${user.login}`} color=\"link\" size=\"sm\">\r\n                    {user.id}\r\n                  </Button>\r\n                </td>\r\n                <td>{user.login}</td>\r\n                <td>{user.email}</td>\r\n                <td>\r\n                  {user.activated ? (\r\n                    <Button color=\"success\" onClick={this.toggleActive(user)}>\r\n                      Activated\r\n                    </Button>\r\n                  ) : (\r\n                    <Button color=\"danger\" onClick={this.toggleActive(user)}>\r\n                      Deactivated\r\n                    </Button>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {user.authorities\r\n                    ? user.authorities.map((authority, j) => (\r\n                        <div key={`user-auth-${i}-${j}`}>\r\n                          <Badge color=\"info\">{authority}</Badge>\r\n                        </div>\r\n                      ))\r\n                    : null}\r\n                </td>\r\n                <td>\r\n                  <TextFormat value={user.createdDate} type=\"date\" format={APP_DATE_FORMAT} blankOnInvalid />\r\n                </td>\r\n                <td>{user.lastModifiedBy}</td>\r\n                <td>\r\n                  <TextFormat value={user.lastModifiedDate} type=\"date\" format={APP_DATE_FORMAT} blankOnInvalid />\r\n                </td>\r\n                <td className=\"text-right\">\r\n                  <div className=\"btn-group flex-btn-group-container\">\r\n                    <Button tag={Link} to={`${match.url}/${user.login}`} color=\"info\" size=\"sm\">\r\n                      <FontAwesomeIcon icon=\"eye\" /> <span className=\"d-none d-md-inline\">View</span>\r\n                    </Button>\r\n                    <Button tag={Link} to={`${match.url}/${user.login}/edit`} color=\"primary\" size=\"sm\">\r\n                      <FontAwesomeIcon icon=\"pencil-alt\" /> <span className=\"d-none d-md-inline\">Edit</span>\r\n                    </Button>\r\n                    <Button\r\n                      tag={Link}\r\n                      to={`${match.url}/${user.login}/delete`}\r\n                      color=\"danger\"\r\n                      size=\"sm\"\r\n                      disabled={account.login === user.login}\r\n                    >\r\n                      <FontAwesomeIcon icon=\"trash\" /> <span className=\"d-none d-md-inline\">Delete</span>\r\n                    </Button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  users: storeState.userManagement.users,\r\n  totalItems: storeState.userManagement.totalItems,\r\n  account: storeState.authentication.account\r\n});\r\n\r\nconst mapDispatchToProps = { getUsers, updateUser };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserManagement);\r\n"]}]}