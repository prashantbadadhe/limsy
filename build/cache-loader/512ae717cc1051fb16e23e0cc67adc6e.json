{"remainingRequest":"H:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!H:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js??ref--4-3!H:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!H:\\projects\\limsy-application\\src\\main\\webapp\\app\\shared\\error\\error-boundary-route.tsx","dependencies":[{"path":"H:\\projects\\limsy-application\\src\\main\\webapp\\app\\shared\\error\\error-boundary-route.tsx","mtime":1549223105125},{"path":"H:\\projects\\limsy-application\\node_modules\\react-hot-loader\\webpack.js","mtime":1549223610051},{"path":"H:\\projects\\limsy-application\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1549223563882},{"path":"H:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1549223563895},{"path":"H:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js","mtime":1549223611188},{"path":"H:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js","mtime":1549223603361}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport ErrorBoundary from 'app/shared/error/error-boundary';\r\nexport var ErrorBoundaryRoute = function (_a) {\r\n    var Component = _a.component, rest = tslib_1.__rest(_a, [\"component\"]);\r\n    var encloseInErrorBoundary = function (props) { return (React.createElement(ErrorBoundary, null,\r\n        React.createElement(Component, tslib_1.__assign({}, props)))); };\r\n    if (!Component)\r\n        throw new Error(\"A component needs to be specified for path \" + rest.path);\r\n    return React.createElement(Route, tslib_1.__assign({}, rest, { render: encloseInErrorBoundary }));\r\n};\r\nexport default ErrorBoundaryRoute;\r\n",{"version":3,"file":"H:\\projects\\limsy-application\\src\\main\\webapp\\app\\shared\\error\\error-boundary-route.tsx","sourceRoot":"","sources":["H:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!H:\\projects\\limsy-application\\src\\main\\webapp\\app\\shared\\error\\error-boundary-route.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,KAAK,EAAc,MAAM,kBAAkB,CAAC;AACrD,OAAO,aAAa,MAAM,iCAAiC,CAAC;AAE5D,MAAM,CAAC,IAAM,kBAAkB,GAAG,UAAC,EAA6C;IAA3C,IAAA,wBAAoB,EAAE,wCAAO;IAChE,IAAM,sBAAsB,GAAG,UAAA,KAAK,IAAI,OAAA,CACtC,oBAAC,aAAa;QACZ,oBAAC,SAAS,uBAAK,KAAK,EAAI,CACV,CACjB,EAJuC,CAIvC,CAAC;IAEF,IAAI,CAAC,SAAS;QAAE,MAAM,IAAI,KAAK,CAAC,gDAA+C,IAAY,CAAC,IAAM,CAAC,CAAC;IAEpG,OAAO,oBAAC,KAAK,uBAAK,IAAI,IAAE,MAAM,EAAE,sBAAsB,IAAI,CAAC;AAC7D,CAAC,CAAC;AAEF,eAAe,kBAAkB,CAAC","sourcesContent":["import React from 'react';\r\nimport { Route, RouteProps } from 'react-router-dom';\r\nimport ErrorBoundary from 'app/shared/error/error-boundary';\r\n\r\nexport const ErrorBoundaryRoute = ({ component: Component, ...rest }: RouteProps) => {\r\n  const encloseInErrorBoundary = props => (\r\n    <ErrorBoundary>\r\n      <Component {...props} />\r\n    </ErrorBoundary>\r\n  );\r\n\r\n  if (!Component) throw new Error(`A component needs to be specified for path ${(rest as any).path}`);\r\n\r\n  return <Route {...rest} render={encloseInErrorBoundary} />;\r\n};\r\n\r\nexport default ErrorBoundaryRoute;\r\n"]}]}