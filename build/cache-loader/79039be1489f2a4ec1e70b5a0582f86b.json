{"remainingRequest":"H:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!H:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js??ref--4-3!H:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!H:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\login\\login.tsx","dependencies":[{"path":"H:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\login\\login.tsx","mtime":1556391440914},{"path":"H:\\projects\\limsy-application\\node_modules\\react-hot-loader\\webpack.js","mtime":1549223610051},{"path":"H:\\projects\\limsy-application\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1549223563882},{"path":"H:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1549223563895},{"path":"H:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js","mtime":1549223611188},{"path":"H:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js","mtime":1549223603361}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { login } from 'app/shared/reducers/authentication';\r\nimport LoginModal from './login-modal';\r\nvar Login = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Login, _super);\r\n    function Login() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = {\r\n            showModal: _this.props.showModal\r\n        };\r\n        _this.handleLogin = function (username, password, rememberMe) {\r\n            if (rememberMe === void 0) { rememberMe = false; }\r\n            _this.props.login(username, password, rememberMe);\r\n        };\r\n        _this.handleClose = function () {\r\n            _this.setState({ showModal: false });\r\n        };\r\n        return _this;\r\n    }\r\n    Login.prototype.componentDidUpdate = function (prevProps, prevState) {\r\n        if (this.props !== prevProps) {\r\n            this.setState({ showModal: this.props.showModal });\r\n        }\r\n    };\r\n    Login.prototype.render = function () {\r\n        var _a = this.props, location = _a.location, isAuthenticated = _a.isAuthenticated;\r\n        var from = (location.state || { from: { pathname: '/', search: location.search } }).from;\r\n        var showModal = this.state.showModal;\r\n        if (isAuthenticated) {\r\n            return React.createElement(Redirect, { to: from });\r\n        }\r\n        return (React.createElement(LoginModal, { showModal: showModal, handleLogin: this.handleLogin, handleClose: this.handleClose, loginError: this.props.loginError }));\r\n    };\r\n    return Login;\r\n}(React.Component));\r\nexport { Login };\r\nvar mapStateToProps = function (_a) {\r\n    var authentication = _a.authentication;\r\n    return ({\r\n        isAuthenticated: authentication.isAuthenticated,\r\n        loginError: authentication.loginError,\r\n        showModal: authentication.showModalLogin\r\n    });\r\n};\r\nvar mapDispatchToProps = { login: login };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n",{"version":3,"file":"H:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\login\\login.tsx","sourceRoot":"","sources":["H:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!H:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\login\\login.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAuB,MAAM,kBAAkB,CAAC;AAGjE,OAAO,EAAE,KAAK,EAAE,MAAM,oCAAoC,CAAC;AAC3D,OAAO,UAAU,MAAM,eAAe,CAAC;AAQvC;IAA2B,iCAAyC;IAApE;QAAA,qEA8BC;QA7BC,WAAK,GAAgB;YACnB,SAAS,EAAE,KAAI,CAAC,KAAK,CAAC,SAAS;SAChC,CAAC;QAQF,iBAAW,GAAG,UAAC,QAAQ,EAAE,QAAQ,EAAE,UAAkB;YAAlB,2BAAA,EAAA,kBAAkB;YACnD,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;QACnD,CAAC,CAAC;QAEF,iBAAW,GAAG;YACZ,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;QACtC,CAAC,CAAC;;IAaJ,CAAC;IAzBC,kCAAkB,GAAlB,UAAmB,SAAsB,EAAE,SAAS;QAClD,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;YAC5B,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;SACpD;IACH,CAAC;IAUD,sBAAM,GAAN;QACQ,IAAA,eAA0C,EAAxC,sBAAQ,EAAE,oCAAe,CAAgB;QACzC,IAAA,oFAAI,CAA4E;QAChF,IAAA,gCAAS,CAAgB;QACjC,IAAI,eAAe,EAAE;YACnB,OAAO,oBAAC,QAAQ,IAAC,EAAE,EAAE,IAAI,GAAI,CAAC;SAC/B;QACD,OAAO,CACL,oBAAC,UAAU,IAAC,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,GAAI,CACtI,CAAC;IACJ,CAAC;IACH,YAAC;AAAD,CAAC,AA9BD,CAA2B,KAAK,CAAC,SAAS,GA8BzC;;AAED,IAAM,eAAe,GAAG,UAAC,EAA8B;QAA5B,kCAAc;IAAmB,OAAA,CAAC;QAC3D,eAAe,EAAE,cAAc,CAAC,eAAe;QAC/C,UAAU,EAAE,cAAc,CAAC,UAAU;QACrC,SAAS,EAAE,cAAc,CAAC,cAAc;KACzC,CAAC;AAJ0D,CAI1D,CAAC;AAEH,IAAM,kBAAkB,GAAG,EAAE,KAAK,OAAA,EAAE,CAAC;AAKrC,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,KAAK,CAAC,CAAC","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { login } from 'app/shared/reducers/authentication';\r\nimport LoginModal from './login-modal';\r\n\r\nexport interface ILoginProps extends StateProps, DispatchProps, RouteComponentProps<{}> {}\r\n\r\nexport interface ILoginState {\r\n  showModal: boolean;\r\n}\r\n\r\nexport class Login extends React.Component<ILoginProps, ILoginState> {\r\n  state: ILoginState = {\r\n    showModal: this.props.showModal\r\n  };\r\n\r\n  componentDidUpdate(prevProps: ILoginProps, prevState) {\r\n    if (this.props !== prevProps) {\r\n      this.setState({ showModal: this.props.showModal });\r\n    }\r\n  }\r\n\r\n  handleLogin = (username, password, rememberMe = false) => {\r\n    this.props.login(username, password, rememberMe);\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ showModal: false });\r\n  };\r\n\r\n  render() {\r\n    const { location, isAuthenticated } = this.props;\r\n    const { from } = location.state || { from: { pathname: '/', search: location.search } };\r\n    const { showModal } = this.state;\r\n    if (isAuthenticated) {\r\n      return <Redirect to={from} />;\r\n    }\r\n    return (\r\n      <LoginModal showModal={showModal} handleLogin={this.handleLogin} handleClose={this.handleClose} loginError={this.props.loginError} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ authentication }: IRootState) => ({\r\n  isAuthenticated: authentication.isAuthenticated,\r\n  loginError: authentication.loginError,\r\n  showModal: authentication.showModalLogin\r\n});\r\n\r\nconst mapDispatchToProps = { login };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n"]}]}