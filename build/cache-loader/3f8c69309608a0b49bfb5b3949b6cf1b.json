{"remainingRequest":"G:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!G:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js??ref--4-3!G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!G:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\account\\password\\password.reducer.ts","dependencies":[{"path":"G:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\account\\password\\password.reducer.ts","mtime":1549223105111},{"path":"G:\\projects\\limsy-application\\node_modules\\react-hot-loader\\webpack.js","mtime":1549223610051},{"path":"G:\\projects\\limsy-application\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1549223563882},{"path":"G:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1549223563895},{"path":"G:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js","mtime":1549223611188},{"path":"G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js","mtime":1549223603361}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport axios from 'axios';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\nexport var ACTION_TYPES = {\r\n    UPDATE_PASSWORD: 'account/UPDATE_PASSWORD',\r\n    RESET: 'account/RESET'\r\n};\r\nvar initialState = {\r\n    loading: false,\r\n    errorMessage: null,\r\n    updateSuccess: false,\r\n    updateFailure: false\r\n};\r\n// Reducer\r\nexport default (function (state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    switch (action.type) {\r\n        case REQUEST(ACTION_TYPES.UPDATE_PASSWORD):\r\n            return tslib_1.__assign({}, initialState, { errorMessage: null, updateSuccess: false, loading: true });\r\n        case FAILURE(ACTION_TYPES.UPDATE_PASSWORD):\r\n            return tslib_1.__assign({}, initialState, { loading: false, updateSuccess: false, updateFailure: true });\r\n        case SUCCESS(ACTION_TYPES.UPDATE_PASSWORD):\r\n            return tslib_1.__assign({}, initialState, { loading: false, updateSuccess: true, updateFailure: false });\r\n        case ACTION_TYPES.RESET:\r\n            return tslib_1.__assign({}, initialState);\r\n        default:\r\n            return state;\r\n    }\r\n});\r\n// Actions\r\nvar apiUrl = 'api/account';\r\nexport var savePassword = function (currentPassword, newPassword) { return ({\r\n    type: ACTION_TYPES.UPDATE_PASSWORD,\r\n    payload: axios.post(apiUrl + \"/change-password\", { currentPassword: currentPassword, newPassword: newPassword }),\r\n    meta: {\r\n        successMessage: '<strong>Password changed!</strong>',\r\n        errorMessage: '<strong>An error has occurred!</strong> The password could not be changed.'\r\n    }\r\n}); };\r\nexport var reset = function () { return ({\r\n    type: ACTION_TYPES.RESET\r\n}); };\r\n",{"version":3,"file":"G:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\account\\password\\password.reducer.ts","sourceRoot":"","sources":["G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!G:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\account\\password\\password.reducer.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,sCAAsC,CAAC;AAEjF,MAAM,CAAC,IAAM,YAAY,GAAG;IAC1B,eAAe,EAAE,yBAAyB;IAC1C,KAAK,EAAE,eAAe;CACvB,CAAC;AAEF,IAAM,YAAY,GAAG;IACnB,OAAO,EAAE,KAAK;IACd,YAAY,EAAE,IAAI;IAClB,aAAa,EAAE,KAAK;IACpB,aAAa,EAAE,KAAK;CACrB,CAAC;AAIF,UAAU;AACV,gBAAe,UAAC,KAAmC,EAAE,MAAM;IAA3C,sBAAA,EAAA,oBAAmC;IACjD,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,OAAO,CAAC,YAAY,CAAC,eAAe,CAAC;YACxC,4BACK,YAAY,IACf,YAAY,EAAE,IAAI,EAClB,aAAa,EAAE,KAAK,EACpB,OAAO,EAAE,IAAI,IACb;QACJ,KAAK,OAAO,CAAC,YAAY,CAAC,eAAe,CAAC;YACxC,4BACK,YAAY,IACf,OAAO,EAAE,KAAK,EACd,aAAa,EAAE,KAAK,EACpB,aAAa,EAAE,IAAI,IACnB;QACJ,KAAK,OAAO,CAAC,YAAY,CAAC,eAAe,CAAC;YACxC,4BACK,YAAY,IACf,OAAO,EAAE,KAAK,EACd,aAAa,EAAE,IAAI,EACnB,aAAa,EAAE,KAAK,IACpB;QACJ,KAAK,YAAY,CAAC,KAAK;YACrB,4BACK,YAAY,EACf;QACJ;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC,EAAC;AAEF,UAAU;AACV,IAAM,MAAM,GAAG,aAAa,CAAC;AAE7B,MAAM,CAAC,IAAM,YAAY,GAAG,UAAC,eAAe,EAAE,WAAW,IAAK,OAAA,CAAC;IAC7D,IAAI,EAAE,YAAY,CAAC,eAAe;IAClC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAI,MAAM,qBAAkB,EAAE,EAAE,eAAe,iBAAA,EAAE,WAAW,aAAA,EAAE,CAAC;IAClF,IAAI,EAAE;QACJ,cAAc,EAAE,oCAAoC;QACpD,YAAY,EAAE,4EAA4E;KAC3F;CACF,CAAC,EAP4D,CAO5D,CAAC;AAEH,MAAM,CAAC,IAAM,KAAK,GAAG,cAAM,OAAA,CAAC;IAC1B,IAAI,EAAE,YAAY,CAAC,KAAK;CACzB,CAAC,EAFyB,CAEzB,CAAC","sourcesContent":["import axios from 'axios';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nexport const ACTION_TYPES = {\r\n  UPDATE_PASSWORD: 'account/UPDATE_PASSWORD',\r\n  RESET: 'account/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  updateSuccess: false,\r\n  updateFailure: false\r\n};\r\n\r\nexport type PasswordState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\nexport default (state: PasswordState = initialState, action): PasswordState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.UPDATE_PASSWORD):\r\n      return {\r\n        ...initialState,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.UPDATE_PASSWORD):\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        updateSuccess: false,\r\n        updateFailure: true\r\n      };\r\n    case SUCCESS(ACTION_TYPES.UPDATE_PASSWORD):\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        updateSuccess: true,\r\n        updateFailure: false\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Actions\r\nconst apiUrl = 'api/account';\r\n\r\nexport const savePassword = (currentPassword, newPassword) => ({\r\n  type: ACTION_TYPES.UPDATE_PASSWORD,\r\n  payload: axios.post(`${apiUrl}/change-password`, { currentPassword, newPassword }),\r\n  meta: {\r\n    successMessage: '<strong>Password changed!</strong>',\r\n    errorMessage: '<strong>An error has occurred!</strong> The password could not be changed.'\r\n  }\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n"]}]}