{"remainingRequest":"G:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!G:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js??ref--4-3!G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!G:\\projects\\limsy-application\\src\\main\\webapp\\app\\entities\\dress\\dress-delete-dialog.tsx","dependencies":[{"path":"G:\\projects\\limsy-application\\src\\main\\webapp\\app\\entities\\dress\\dress-delete-dialog.tsx","mtime":1556391440905},{"path":"G:\\projects\\limsy-application\\node_modules\\react-hot-loader\\webpack.js","mtime":1549223610051},{"path":"G:\\projects\\limsy-application\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1549223563882},{"path":"G:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1549223563895},{"path":"G:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js","mtime":1549223611188},{"path":"G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js","mtime":1549223603361}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntity, deleteEntity } from './dress.reducer';\r\nvar DressDeleteDialog = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DressDeleteDialog, _super);\r\n    function DressDeleteDialog() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.confirmDelete = function (event) {\r\n            _this.props.deleteEntity(_this.props.dressEntity.id);\r\n            _this.handleClose(event);\r\n        };\r\n        _this.handleClose = function (event) {\r\n            event.stopPropagation();\r\n            _this.props.history.goBack();\r\n        };\r\n        return _this;\r\n    }\r\n    DressDeleteDialog.prototype.componentDidMount = function () {\r\n        this.props.getEntity(this.props.match.params.id);\r\n    };\r\n    DressDeleteDialog.prototype.render = function () {\r\n        var dressEntity = this.props.dressEntity;\r\n        return (React.createElement(Modal, { isOpen: true, toggle: this.handleClose },\r\n            React.createElement(ModalHeader, { toggle: this.handleClose }, \"Confirm delete operation\"),\r\n            React.createElement(ModalBody, { id: \"limsyApp.dress.delete.question\" }, \"Are you sure you want to delete this Dress?\"),\r\n            React.createElement(ModalFooter, null,\r\n                React.createElement(Button, { color: \"secondary\", onClick: this.handleClose },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"ban\" }),\r\n                    \"\\u00A0 Cancel\"),\r\n                React.createElement(Button, { id: \"jhi-confirm-delete-dress\", color: \"danger\", onClick: this.confirmDelete },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"trash\" }),\r\n                    \"\\u00A0 Delete\"))));\r\n    };\r\n    return DressDeleteDialog;\r\n}(React.Component));\r\nexport { DressDeleteDialog };\r\nvar mapStateToProps = function (_a) {\r\n    var dress = _a.dress;\r\n    return ({\r\n        dressEntity: dress.entity\r\n    });\r\n};\r\nvar mapDispatchToProps = { getEntity: getEntity, deleteEntity: deleteEntity };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DressDeleteDialog);\r\n",{"version":3,"file":"G:\\projects\\limsy-application\\src\\main\\webapp\\app\\entities\\dress\\dress-delete-dialog.tsx","sourceRoot":"","sources":["G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!G:\\projects\\limsy-application\\src\\main\\webapp\\app\\entities\\dress\\dress-delete-dialog.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AAEhF,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AAIjE,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAI1D;IAAuC,6CAAwC;IAA/E;QAAA,qEAgCC;QA3BC,mBAAa,GAAG,UAAA,KAAK;YACnB,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YACnD,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC;QAEF,iBAAW,GAAG,UAAA,KAAK;YACjB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAC9B,CAAC,CAAC;;IAmBJ,CAAC;IA/BC,6CAAiB,GAAjB;QACE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC;IAYD,kCAAM,GAAN;QACU,IAAA,oCAAW,CAAgB;QACnC,OAAO,CACL,oBAAC,KAAK,IAAC,MAAM,QAAC,MAAM,EAAE,IAAI,CAAC,WAAW;YACpC,oBAAC,WAAW,IAAC,MAAM,EAAE,IAAI,CAAC,WAAW,+BAAwC;YAC7E,oBAAC,SAAS,IAAC,EAAE,EAAC,gCAAgC,kDAAwD;YACtG,oBAAC,WAAW;gBACV,oBAAC,MAAM,IAAC,KAAK,EAAC,WAAW,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW;oBACjD,oBAAC,eAAe,IAAC,IAAI,EAAC,KAAK,GAAG;oCACvB;gBACT,oBAAC,MAAM,IAAC,EAAE,EAAC,0BAA0B,EAAC,KAAK,EAAC,QAAQ,EAAC,OAAO,EAAE,IAAI,CAAC,aAAa;oBAC9E,oBAAC,eAAe,IAAC,IAAI,EAAC,OAAO,GAAG;oCACzB,CACG,CACR,CACT,CAAC;IACJ,CAAC;IACH,wBAAC;AAAD,CAAC,AAhCD,CAAuC,KAAK,CAAC,SAAS,GAgCrD;;AAED,IAAM,eAAe,GAAG,UAAC,EAAqB;QAAnB,gBAAK;IAAmB,OAAA,CAAC;QAClD,WAAW,EAAE,KAAK,CAAC,MAAM;KAC1B,CAAC;AAFiD,CAEjD,CAAC;AAEH,IAAM,kBAAkB,GAAG,EAAE,SAAS,WAAA,EAAE,YAAY,cAAA,EAAE,CAAC;AAKvD,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,iBAAiB,CAAC,CAAC","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IDress } from 'app/shared/model/dress.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './dress.reducer';\r\n\r\nexport interface IDressDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class DressDeleteDialog extends React.Component<IDressDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.dressEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { dressEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>Confirm delete operation</ModalHeader>\r\n        <ModalBody id=\"limsyApp.dress.delete.question\">Are you sure you want to delete this Dress?</ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />&nbsp; Cancel\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-dress\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />&nbsp; Delete\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ dress }: IRootState) => ({\r\n  dressEntity: dress.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DressDeleteDialog);\r\n"]}]}