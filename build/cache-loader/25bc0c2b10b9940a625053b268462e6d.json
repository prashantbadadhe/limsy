{"remainingRequest":"G:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!G:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js??ref--4-3!G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!G:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\login\\login-modal.tsx","dependencies":[{"path":"G:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\login\\login-modal.tsx","mtime":1549223105123},{"path":"G:\\projects\\limsy-application\\node_modules\\react-hot-loader\\webpack.js","mtime":1549223610051},{"path":"G:\\projects\\limsy-application\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1549223563882},{"path":"G:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1549223563895},{"path":"G:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js","mtime":1549223611188},{"path":"G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js","mtime":1549223603361}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label, Alert, Row, Col } from 'reactstrap';\r\nimport { AvForm, AvField, AvGroup, AvInput } from 'availity-reactstrap-validation';\r\nimport { Link } from 'react-router-dom';\r\nvar LoginModal = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LoginModal, _super);\r\n    function LoginModal() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.handleSubmit = function (event, errors, _a) {\r\n            var username = _a.username, password = _a.password, rememberMe = _a.rememberMe;\r\n            var handleLogin = _this.props.handleLogin;\r\n            handleLogin(username, password, rememberMe);\r\n        };\r\n        return _this;\r\n    }\r\n    LoginModal.prototype.render = function () {\r\n        var _a = this.props, loginError = _a.loginError, handleClose = _a.handleClose;\r\n        return (React.createElement(Modal, { isOpen: this.props.showModal, toggle: handleClose, backdrop: \"static\", id: \"login-page\", autoFocus: false },\r\n            React.createElement(AvForm, { onSubmit: this.handleSubmit },\r\n                React.createElement(ModalHeader, { id: \"login-title\", toggle: handleClose }, \"Sign in\"),\r\n                React.createElement(ModalBody, null,\r\n                    React.createElement(Row, null,\r\n                        React.createElement(Col, { md: \"12\" }, loginError ? (React.createElement(Alert, { color: \"danger\" },\r\n                            React.createElement(\"strong\", null, \"Failed to sign in!\"),\r\n                            \" Please check your credentials and try again.\")) : null),\r\n                        React.createElement(Col, { md: \"12\" },\r\n                            React.createElement(AvField, { name: \"username\", label: \"Username\", placeholder: \"Your username\", required: true, errorMessage: \"Username cannot be empty!\", autoFocus: true }),\r\n                            React.createElement(AvField, { name: \"password\", type: \"password\", label: \"Password\", placeholder: \"Your password\", required: true, errorMessage: \"Password cannot be empty!\" }),\r\n                            React.createElement(AvGroup, { check: true, inline: true },\r\n                                React.createElement(Label, { className: \"form-check-label\" },\r\n                                    React.createElement(AvInput, { type: \"checkbox\", name: \"rememberMe\" }),\r\n                                    \" Remember me\")))),\r\n                    React.createElement(\"div\", { className: \"mt-1\" }, \"\\u00A0\"),\r\n                    React.createElement(Alert, { color: \"warning\" },\r\n                        React.createElement(Link, { to: \"/reset/request\" }, \"Did you forget your password?\")),\r\n                    React.createElement(Alert, { color: \"warning\" },\r\n                        React.createElement(\"span\", null, \"You don't have an account yet?\"),\r\n                        \" \",\r\n                        React.createElement(Link, { to: \"/register\" }, \"Register a new account\"))),\r\n                React.createElement(ModalFooter, null,\r\n                    React.createElement(Button, { color: \"secondary\", onClick: handleClose, tabIndex: \"1\" }, \"Cancel\"),\r\n                    ' ',\r\n                    React.createElement(Button, { color: \"primary\", type: \"submit\" }, \"Sign in\")))));\r\n    };\r\n    return LoginModal;\r\n}(React.Component));\r\nexport default LoginModal;\r\n",{"version":3,"file":"G:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\login\\login-modal.tsx","sourceRoot":"","sources":["G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!G:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\login\\login-modal.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,YAAY,CAAC;AACxG,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,gCAAgC,CAAC;AACnF,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AASxC;IAAyB,sCAAiC;IAA1D;QAAA,qEAoEC;QAnEC,kBAAY,GAAG,UAAC,KAAK,EAAE,MAAM,EAAE,EAAkC;gBAAhC,sBAAQ,EAAE,sBAAQ,EAAE,0BAAU;YACrD,IAAA,qCAAW,CAAgB;YACnC,WAAW,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC9C,CAAC,CAAC;;IAgEJ,CAAC;IA9DC,2BAAM,GAAN;QACQ,IAAA,eAAwC,EAAtC,0BAAU,EAAE,4BAAW,CAAgB;QAE/C,OAAO,CACL,oBAAC,KAAK,IAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAC,QAAQ,EAAC,EAAE,EAAC,YAAY,EAAC,SAAS,EAAE,KAAK;YAC1G,oBAAC,MAAM,IAAC,QAAQ,EAAE,IAAI,CAAC,YAAY;gBACjC,oBAAC,WAAW,IAAC,EAAE,EAAC,aAAa,EAAC,MAAM,EAAE,WAAW,cAEnC;gBACd,oBAAC,SAAS;oBACR,oBAAC,GAAG;wBACF,oBAAC,GAAG,IAAC,EAAE,EAAC,IAAI,IACT,UAAU,CAAC,CAAC,CAAC,CACZ,oBAAC,KAAK,IAAC,KAAK,EAAC,QAAQ;4BACnB,yDAAmC;4EAC7B,CACT,CAAC,CAAC,CAAC,IAAI,CACJ;wBACN,oBAAC,GAAG,IAAC,EAAE,EAAC,IAAI;4BACV,oBAAC,OAAO,IACN,IAAI,EAAC,UAAU,EACf,KAAK,EAAC,UAAU,EAChB,WAAW,EAAC,eAAe,EAC3B,QAAQ,QACR,YAAY,EAAC,2BAA2B,EACxC,SAAS,SACT;4BACF,oBAAC,OAAO,IACN,IAAI,EAAC,UAAU,EACf,IAAI,EAAC,UAAU,EACf,KAAK,EAAC,UAAU,EAChB,WAAW,EAAC,eAAe,EAC3B,QAAQ,QACR,YAAY,EAAC,2BAA2B,GACxC;4BACF,oBAAC,OAAO,IAAC,KAAK,QAAC,MAAM;gCACnB,oBAAC,KAAK,IAAC,SAAS,EAAC,kBAAkB;oCACjC,oBAAC,OAAO,IAAC,IAAI,EAAC,UAAU,EAAC,IAAI,EAAC,YAAY,GAAG;mDACvC,CACA,CACN,CACF;oBACN,6BAAK,SAAS,EAAC,MAAM,aAAa;oBAClC,oBAAC,KAAK,IAAC,KAAK,EAAC,SAAS;wBACpB,oBAAC,IAAI,IAAC,EAAE,EAAC,gBAAgB,oCAAqC,CACxD;oBACR,oBAAC,KAAK,IAAC,KAAK,EAAC,SAAS;wBACpB,mEAA2C;;wBAAC,oBAAC,IAAI,IAAC,EAAE,EAAC,WAAW,6BAA8B,CACxF,CACE;gBACZ,oBAAC,WAAW;oBACV,oBAAC,MAAM,IAAC,KAAK,EAAC,WAAW,EAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAC,GAAG,aAEnD;oBAAC,GAAG;oBACb,oBAAC,MAAM,IAAC,KAAK,EAAC,SAAS,EAAC,IAAI,EAAC,QAAQ,cAE5B,CACG,CACP,CACH,CACT,CAAC;IACJ,CAAC;IACH,iBAAC;AAAD,CAAC,AApED,CAAyB,KAAK,CAAC,SAAS,GAoEvC;AAED,eAAe,UAAU,CAAC","sourcesContent":["import React from 'react';\r\n\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label, Alert, Row, Col } from 'reactstrap';\r\nimport { AvForm, AvField, AvGroup, AvInput } from 'availity-reactstrap-validation';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface ILoginModalProps {\r\n  showModal: boolean;\r\n  loginError: boolean;\r\n  handleLogin: Function;\r\n  handleClose: Function;\r\n}\r\n\r\nclass LoginModal extends React.Component<ILoginModalProps> {\r\n  handleSubmit = (event, errors, { username, password, rememberMe }) => {\r\n    const { handleLogin } = this.props;\r\n    handleLogin(username, password, rememberMe);\r\n  };\r\n\r\n  render() {\r\n    const { loginError, handleClose } = this.props;\r\n\r\n    return (\r\n      <Modal isOpen={this.props.showModal} toggle={handleClose} backdrop=\"static\" id=\"login-page\" autoFocus={false}>\r\n        <AvForm onSubmit={this.handleSubmit}>\r\n          <ModalHeader id=\"login-title\" toggle={handleClose}>\r\n            Sign in\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Row>\r\n              <Col md=\"12\">\r\n                {loginError ? (\r\n                  <Alert color=\"danger\">\r\n                    <strong>Failed to sign in!</strong> Please check your credentials and try again.\r\n                  </Alert>\r\n                ) : null}\r\n              </Col>\r\n              <Col md=\"12\">\r\n                <AvField\r\n                  name=\"username\"\r\n                  label=\"Username\"\r\n                  placeholder=\"Your username\"\r\n                  required\r\n                  errorMessage=\"Username cannot be empty!\"\r\n                  autoFocus\r\n                />\r\n                <AvField\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  placeholder=\"Your password\"\r\n                  required\r\n                  errorMessage=\"Password cannot be empty!\"\r\n                />\r\n                <AvGroup check inline>\r\n                  <Label className=\"form-check-label\">\r\n                    <AvInput type=\"checkbox\" name=\"rememberMe\" /> Remember me\r\n                  </Label>\r\n                </AvGroup>\r\n              </Col>\r\n            </Row>\r\n            <div className=\"mt-1\">&nbsp;</div>\r\n            <Alert color=\"warning\">\r\n              <Link to=\"/reset/request\">Did you forget your password?</Link>\r\n            </Alert>\r\n            <Alert color=\"warning\">\r\n              <span>You don't have an account yet?</span> <Link to=\"/register\">Register a new account</Link>\r\n            </Alert>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={handleClose} tabIndex=\"1\">\r\n              Cancel\r\n            </Button>{' '}\r\n            <Button color=\"primary\" type=\"submit\">\r\n              Sign in\r\n            </Button>\r\n          </ModalFooter>\r\n        </AvForm>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginModal;\r\n"]}]}