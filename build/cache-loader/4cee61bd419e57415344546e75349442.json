{"remainingRequest":"G:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!G:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js??ref--4-3!G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!G:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\account\\activate\\activate.reducer.ts","dependencies":[{"path":"G:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\account\\activate\\activate.reducer.ts","mtime":1549223105109},{"path":"G:\\projects\\limsy-application\\node_modules\\react-hot-loader\\webpack.js","mtime":1549223610051},{"path":"G:\\projects\\limsy-application\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1549223563882},{"path":"G:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1549223563895},{"path":"G:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js","mtime":1549223611188},{"path":"G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js","mtime":1549223603361}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport axios from 'axios';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\nexport var ACTION_TYPES = {\r\n    ACTIVATE_ACCOUNT: 'activate/ACTIVATE_ACCOUNT',\r\n    RESET: 'activate/RESET'\r\n};\r\nvar initialState = {\r\n    activationSuccess: false,\r\n    activationFailure: false\r\n};\r\n// Reducer\r\nexport default (function (state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    switch (action.type) {\r\n        case REQUEST(ACTION_TYPES.ACTIVATE_ACCOUNT):\r\n            return tslib_1.__assign({}, state);\r\n        case FAILURE(ACTION_TYPES.ACTIVATE_ACCOUNT):\r\n            return tslib_1.__assign({}, state, { activationFailure: true });\r\n        case SUCCESS(ACTION_TYPES.ACTIVATE_ACCOUNT):\r\n            return tslib_1.__assign({}, state, { activationSuccess: true });\r\n        case ACTION_TYPES.RESET:\r\n            return tslib_1.__assign({}, initialState);\r\n        default:\r\n            return state;\r\n    }\r\n});\r\n// Actions\r\nexport var activateAction = function (key) { return ({\r\n    type: ACTION_TYPES.ACTIVATE_ACCOUNT,\r\n    payload: axios.get('api/activate?key=' + key)\r\n}); };\r\nexport var reset = function () { return ({\r\n    type: ACTION_TYPES.RESET\r\n}); };\r\n",{"version":3,"file":"G:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\account\\activate\\activate.reducer.ts","sourceRoot":"","sources":["G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!G:\\projects\\limsy-application\\src\\main\\webapp\\app\\modules\\account\\activate\\activate.reducer.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,sCAAsC,CAAC;AAEjF,MAAM,CAAC,IAAM,YAAY,GAAG;IAC1B,gBAAgB,EAAE,2BAA2B;IAC7C,KAAK,EAAE,gBAAgB;CACxB,CAAC;AAEF,IAAM,YAAY,GAAG;IACnB,iBAAiB,EAAE,KAAK;IACxB,iBAAiB,EAAE,KAAK;CACzB,CAAC;AAIF,UAAU;AACV,gBAAe,UAAC,KAAmC,EAAE,MAAM;IAA3C,sBAAA,EAAA,oBAAmC;IACjD,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,OAAO,CAAC,YAAY,CAAC,gBAAgB,CAAC;YACzC,4BACK,KAAK,EACR;QACJ,KAAK,OAAO,CAAC,YAAY,CAAC,gBAAgB,CAAC;YACzC,4BACK,KAAK,IACR,iBAAiB,EAAE,IAAI,IACvB;QACJ,KAAK,OAAO,CAAC,YAAY,CAAC,gBAAgB,CAAC;YACzC,4BACK,KAAK,IACR,iBAAiB,EAAE,IAAI,IACvB;QACJ,KAAK,YAAY,CAAC,KAAK;YACrB,4BACK,YAAY,EACf;QACJ;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC,EAAC;AAEF,UAAU;AACV,MAAM,CAAC,IAAM,cAAc,GAAG,UAAA,GAAG,IAAI,OAAA,CAAC;IACpC,IAAI,EAAE,YAAY,CAAC,gBAAgB;IACnC,OAAO,EAAE,KAAK,CAAC,GAAG,CAAC,mBAAmB,GAAG,GAAG,CAAC;CAC9C,CAAC,EAHmC,CAGnC,CAAC;AAEH,MAAM,CAAC,IAAM,KAAK,GAAG,cAAM,OAAA,CAAC;IAC1B,IAAI,EAAE,YAAY,CAAC,KAAK;CACzB,CAAC,EAFyB,CAEzB,CAAC","sourcesContent":["import axios from 'axios';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nexport const ACTION_TYPES = {\r\n  ACTIVATE_ACCOUNT: 'activate/ACTIVATE_ACCOUNT',\r\n  RESET: 'activate/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  activationSuccess: false,\r\n  activationFailure: false\r\n};\r\n\r\nexport type ActivateState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\nexport default (state: ActivateState = initialState, action): ActivateState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.ACTIVATE_ACCOUNT):\r\n      return {\r\n        ...state\r\n      };\r\n    case FAILURE(ACTION_TYPES.ACTIVATE_ACCOUNT):\r\n      return {\r\n        ...state,\r\n        activationFailure: true\r\n      };\r\n    case SUCCESS(ACTION_TYPES.ACTIVATE_ACCOUNT):\r\n      return {\r\n        ...state,\r\n        activationSuccess: true\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Actions\r\nexport const activateAction = key => ({\r\n  type: ACTION_TYPES.ACTIVATE_ACCOUNT,\r\n  payload: axios.get('api/activate?key=' + key)\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n"]}]}