{"remainingRequest":"G:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!G:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js??ref--4-3!G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!G:\\projects\\limsy-application\\src\\main\\webapp\\app\\entities\\dress\\dress.reducer.ts","dependencies":[{"path":"G:\\projects\\limsy-application\\src\\main\\webapp\\app\\entities\\dress\\dress.reducer.ts","mtime":1549223105095},{"path":"G:\\projects\\limsy-application\\node_modules\\react-hot-loader\\webpack.js","mtime":1549223610051},{"path":"G:\\projects\\limsy-application\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1549223563882},{"path":"G:\\projects\\limsy-application\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1549223563895},{"path":"G:\\projects\\limsy-application\\node_modules\\ts-loader\\index.js","mtime":1549223611188},{"path":"G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js","mtime":1549223603361}],"contextDependencies":[],"result":["var _this = this;\r\nimport * as tslib_1 from \"tslib\";\r\nimport axios from 'axios';\r\nimport { parseHeaderForLinks, loadMoreDataWhenScrolled } from 'react-jhipster';\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\nimport { defaultValue } from 'app/shared/model/dress.model';\r\nexport var ACTION_TYPES = {\r\n    FETCH_DRESS_LIST: 'dress/FETCH_DRESS_LIST',\r\n    FETCH_DRESS: 'dress/FETCH_DRESS',\r\n    CREATE_DRESS: 'dress/CREATE_DRESS',\r\n    UPDATE_DRESS: 'dress/UPDATE_DRESS',\r\n    DELETE_DRESS: 'dress/DELETE_DRESS',\r\n    SET_BLOB: 'dress/SET_BLOB',\r\n    RESET: 'dress/RESET'\r\n};\r\nvar initialState = {\r\n    loading: false,\r\n    errorMessage: null,\r\n    entities: [],\r\n    entity: defaultValue,\r\n    links: { next: 0 },\r\n    updating: false,\r\n    totalItems: 0,\r\n    updateSuccess: false\r\n};\r\n// Reducer\r\nexport default (function (state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    var _a;\r\n    switch (action.type) {\r\n        case REQUEST(ACTION_TYPES.FETCH_DRESS_LIST):\r\n        case REQUEST(ACTION_TYPES.FETCH_DRESS):\r\n            return tslib_1.__assign({}, state, { errorMessage: null, updateSuccess: false, loading: true });\r\n        case REQUEST(ACTION_TYPES.CREATE_DRESS):\r\n        case REQUEST(ACTION_TYPES.UPDATE_DRESS):\r\n        case REQUEST(ACTION_TYPES.DELETE_DRESS):\r\n            return tslib_1.__assign({}, state, { errorMessage: null, updateSuccess: false, updating: true });\r\n        case FAILURE(ACTION_TYPES.FETCH_DRESS_LIST):\r\n        case FAILURE(ACTION_TYPES.FETCH_DRESS):\r\n        case FAILURE(ACTION_TYPES.CREATE_DRESS):\r\n        case FAILURE(ACTION_TYPES.UPDATE_DRESS):\r\n        case FAILURE(ACTION_TYPES.DELETE_DRESS):\r\n            return tslib_1.__assign({}, state, { loading: false, updating: false, updateSuccess: false, errorMessage: action.payload });\r\n        case SUCCESS(ACTION_TYPES.FETCH_DRESS_LIST):\r\n            var links = parseHeaderForLinks(action.payload.headers.link);\r\n            return tslib_1.__assign({}, state, { links: links, loading: false, totalItems: action.payload.headers['x-total-count'], entities: loadMoreDataWhenScrolled(state.entities, action.payload.data, links) });\r\n        case SUCCESS(ACTION_TYPES.FETCH_DRESS):\r\n            return tslib_1.__assign({}, state, { loading: false, entity: action.payload.data });\r\n        case SUCCESS(ACTION_TYPES.CREATE_DRESS):\r\n        case SUCCESS(ACTION_TYPES.UPDATE_DRESS):\r\n            return tslib_1.__assign({}, state, { updating: false, updateSuccess: true, entity: action.payload.data });\r\n        case SUCCESS(ACTION_TYPES.DELETE_DRESS):\r\n            return tslib_1.__assign({}, state, { updating: false, updateSuccess: true, entity: {} });\r\n        case ACTION_TYPES.SET_BLOB:\r\n            var _b = action.payload, name = _b.name, data = _b.data, contentType = _b.contentType;\r\n            return tslib_1.__assign({}, state, { entity: tslib_1.__assign({}, state.entity, (_a = {}, _a[name] = data, _a[name + 'ContentType'] = contentType, _a)) });\r\n        case ACTION_TYPES.RESET:\r\n            return tslib_1.__assign({}, initialState);\r\n        default:\r\n            return state;\r\n    }\r\n});\r\nvar apiUrl = 'api/dresses';\r\n// Actions\r\nexport var getEntities = function (page, size, sort) {\r\n    var requestUrl = \"\" + apiUrl + (sort ? \"?page=\" + page + \"&size=\" + size + \"&sort=\" + sort : '');\r\n    return {\r\n        type: ACTION_TYPES.FETCH_DRESS_LIST,\r\n        payload: axios.get(\"\" + requestUrl + (sort ? '&' : '?') + \"cacheBuster=\" + new Date().getTime())\r\n    };\r\n};\r\nexport var getEntity = function (id) {\r\n    var requestUrl = apiUrl + \"/\" + id;\r\n    return {\r\n        type: ACTION_TYPES.FETCH_DRESS,\r\n        payload: axios.get(requestUrl)\r\n    };\r\n};\r\nexport var createEntity = function (entity) { return function (dispatch) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n    var result;\r\n    return tslib_1.__generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0: return [4 /*yield*/, dispatch({\r\n                    type: ACTION_TYPES.CREATE_DRESS,\r\n                    payload: axios.post(apiUrl, cleanEntity(entity))\r\n                })];\r\n            case 1:\r\n                result = _a.sent();\r\n                return [2 /*return*/, result];\r\n        }\r\n    });\r\n}); }; };\r\nexport var updateEntity = function (entity) { return function (dispatch) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n    var result;\r\n    return tslib_1.__generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0: return [4 /*yield*/, dispatch({\r\n                    type: ACTION_TYPES.UPDATE_DRESS,\r\n                    payload: axios.put(apiUrl, cleanEntity(entity))\r\n                })];\r\n            case 1:\r\n                result = _a.sent();\r\n                return [2 /*return*/, result];\r\n        }\r\n    });\r\n}); }; };\r\nexport var deleteEntity = function (id) { return function (dispatch) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n    var requestUrl, result;\r\n    return tslib_1.__generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                requestUrl = apiUrl + \"/\" + id;\r\n                return [4 /*yield*/, dispatch({\r\n                        type: ACTION_TYPES.DELETE_DRESS,\r\n                        payload: axios.delete(requestUrl)\r\n                    })];\r\n            case 1:\r\n                result = _a.sent();\r\n                return [2 /*return*/, result];\r\n        }\r\n    });\r\n}); }; };\r\nexport var setBlob = function (name, data, contentType) { return ({\r\n    type: ACTION_TYPES.SET_BLOB,\r\n    payload: {\r\n        name: name,\r\n        data: data,\r\n        contentType: contentType\r\n    }\r\n}); };\r\nexport var reset = function () { return ({\r\n    type: ACTION_TYPES.RESET\r\n}); };\r\n",{"version":3,"file":"G:\\projects\\limsy-application\\src\\main\\webapp\\app\\entities\\dress\\dress.reducer.ts","sourceRoot":"","sources":["G:\\projects\\limsy-application\\node_modules\\tslint-loader\\index.js!G:\\projects\\limsy-application\\src\\main\\webapp\\app\\entities\\dress\\dress.reducer.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  parseHeaderForLinks,\r\n  loadMoreDataWhenScrolled,\r\n  ICrudGetAction,\r\n  ICrudGetAllAction,\r\n  ICrudPutAction,\r\n  ICrudDeleteAction\r\n} from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IDress, defaultValue } from 'app/shared/model/dress.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_DRESS_LIST: 'dress/FETCH_DRESS_LIST',\r\n  FETCH_DRESS: 'dress/FETCH_DRESS',\r\n  CREATE_DRESS: 'dress/CREATE_DRESS',\r\n  UPDATE_DRESS: 'dress/UPDATE_DRESS',\r\n  DELETE_DRESS: 'dress/DELETE_DRESS',\r\n  SET_BLOB: 'dress/SET_BLOB',\r\n  RESET: 'dress/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IDress>,\r\n  entity: defaultValue,\r\n  links: { next: 0 },\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type DressState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: DressState = initialState, action): DressState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_DRESS_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_DRESS):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_DRESS):\r\n    case REQUEST(ACTION_TYPES.UPDATE_DRESS):\r\n    case REQUEST(ACTION_TYPES.DELETE_DRESS):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_DRESS_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_DRESS):\r\n    case FAILURE(ACTION_TYPES.CREATE_DRESS):\r\n    case FAILURE(ACTION_TYPES.UPDATE_DRESS):\r\n    case FAILURE(ACTION_TYPES.DELETE_DRESS):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_DRESS_LIST):\r\n      const links = parseHeaderForLinks(action.payload.headers.link);\r\n      return {\r\n        ...state,\r\n        links,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: loadMoreDataWhenScrolled(state.entities, action.payload.data, links)\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_DRESS):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_DRESS):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_DRESS):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_DRESS):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.SET_BLOB:\r\n      const { name, data, contentType } = action.payload;\r\n      return {\r\n        ...state,\r\n        entity: {\r\n          ...state.entity,\r\n          [name]: data,\r\n          [name + 'ContentType']: contentType\r\n        }\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/dresses';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IDress> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_DRESS_LIST,\r\n    payload: axios.get<IDress>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<IDress> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_DRESS,\r\n    payload: axios.get<IDress>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IDress> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_DRESS,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IDress> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_DRESS,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IDress> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_DRESS,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  return result;\r\n};\r\n\r\nexport const setBlob = (name, data, contentType?) => ({\r\n  type: ACTION_TYPES.SET_BLOB,\r\n  payload: {\r\n    name,\r\n    data,\r\n    contentType\r\n  }\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n"]}]}